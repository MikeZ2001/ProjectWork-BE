openapi: 3.0.3
info:
  title: 'Laravel API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Modules
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'Paste your Passport token above to authorize requests.'
security:
  -
    default: []
paths:
  /api/v1/categories:
    get:
      summary: ''
      operationId: getApiV1Categories
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: exception
                  error_description: 'Unauthorized: unable to set cookie'
                  message: 'Authentication failed exception.'
                properties:
                  error:
                    type: string
                    example: exception
                  error_description:
                    type: string
                    example: 'Unauthorized: unable to set cookie'
                  message:
                    type: string
                    example: 'Authentication failed exception.'
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiV1Categories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
  '/api/v1/categories/{id}':
    put:
      summary: ''
      operationId: putApiV1CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
              required:
                - name
    delete:
      summary: ''
      operationId: deleteApiV1CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/auth_status:
    get:
      summary: ''
      operationId: getApiV1Auth_status
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: exception
                  error_description: 'Unauthorized: unable to set cookie'
                  message: 'Authentication failed exception.'
                properties:
                  error:
                    type: string
                    example: exception
                  error_description:
                    type: string
                    example: 'Unauthorized: unable to set cookie'
                  message:
                    type: string
                    example: 'Authentication failed exception.'
      tags:
        - Endpoints
  /api/v1/accounts:
    get:
      summary: 'Find all paginated accounts.'
      operationId: findAllPaginatedAccounts
      description: ''
      parameters:
        -
          in: query
          name: per_page
          description: 'The number of items per page.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The number of items per page.'
            example: 10
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Checking Account'
                      type: checking
                      balance: 1000.0
                      open_date: '2025-07-01'
                      close_date: null
                      status: active
                      created_at: '2025-07-01T09:00:00Z'
                      updated_at: '2025-07-01T09:00:00Z'
                  links:
                    first: 'http://api.example.com/accounts?page=1'
                    last: 'http://api.example.com/accounts?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    path: 'http://api.example.com/accounts'
                    per_page: 10
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Checking Account'
                        type: checking
                        balance: 1000
                        open_date: '2025-07-01'
                        close_date: null
                        status: active
                        created_at: '2025-07-01T09:00:00Z'
                        updated_at: '2025-07-01T09:00:00Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Checking Account'
                        type:
                          type: string
                          example: checking
                        balance:
                          type: number
                          example: 1000.0
                        open_date:
                          type: string
                          example: '2025-07-01'
                        close_date:
                          type: string
                          example: null
                        status:
                          type: string
                          example: active
                        created_at:
                          type: string
                          example: '2025-07-01T09:00:00Z'
                        updated_at:
                          type: string
                          example: '2025-07-01T09:00:00Z'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://api.example.com/accounts?page=1'
                      last:
                        type: string
                        example: 'http://api.example.com/accounts?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: 'http://api.example.com/accounts'
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 1
      tags:
        - Modules
    post:
      summary: 'Store an account.'
      operationId: storeAnAccount
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  name: 'Savings Account'
                  type: savings
                  balance: 1500.0
                  open_date: '2025-07-10'
                  close_date: null
                  status: active
                  created_at: '2025-07-10T10:00:00Z'
                  updated_at: '2025-07-10T10:00:00Z'
                  user_id: 1
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: 'Savings Account'
                  type:
                    type: string
                    example: savings
                  balance:
                    type: number
                    example: 1500.0
                  open_date:
                    type: string
                    example: '2025-07-10'
                  close_date:
                    type: string
                    example: null
                  status:
                    type: string
                    example: active
                  created_at:
                    type: string
                    example: '2025-07-10T10:00:00Z'
                  updated_at:
                    type: string
                    example: '2025-07-10T10:00:00Z'
                  user_id:
                    type: integer
                    example: 1
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name field is required. (and 1 more error)'
                  errors:
                    name:
                      - 'The name field is required.'
                    type:
                      - 'The selected type is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The name field is required. (and 1 more error)'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name field is required.'
                        items:
                          type: string
                      type:
                        type: array
                        example:
                          - 'The selected type is invalid.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: resource_not_created
                  error_description: 'Account has not been created'
                  message: 'Resource not created'
                properties:
                  error:
                    type: string
                    example: resource_not_created
                  error_description:
                    type: string
                    example: 'Account has not been created'
                  message:
                    type: string
                    example: 'Resource not created'
      tags:
        - Modules
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The account name.'
                  example: '"Savings Account"'
                  nullable: false
                type:
                  type: string
                  description: 'The account type.'
                  example: '"savings"'
                  nullable: false
                balance:
                  type: number
                  description: 'The balance.'
                  example: 1500.0
                  nullable: false
                open_date:
                  type: string
                  description: 'The opening date.'
                  example: '"2025-07-01"'
                  nullable: false
                close_date:
                  type: string
                  description: 'The closing date.'
                  example: '"2025-12-31"'
                  nullable: true
                status:
                  type: string
                  description: 'The status.'
                  example: '"inactive"'
                  nullable: false
  '/api/v1/accounts/{id}':
    get:
      summary: 'Find an account.'
      operationId: findAnAccount
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'Checking Account'
                  type: checking
                  balance: 1000.0
                  open_date: '2025-07-01'
                  close_date: null
                  status: active
                  created_at: '2025-07-01T09:00:00Z'
                  updated_at: '2025-07-01T09:00:00Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'Checking Account'
                  type:
                    type: string
                    example: checking
                  balance:
                    type: number
                    example: 1000.0
                  open_date:
                    type: string
                    example: '2025-07-01'
                  close_date:
                    type: string
                    example: null
                  status:
                    type: string
                    example: active
                  created_at:
                    type: string
                    example: '2025-07-01T09:00:00Z'
                  updated_at:
                    type: string
                    example: '2025-07-01T09:00:00Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: resource_not_found
                  error_description: 'Account could not be found.'
                  message: 'Resource not found'
                properties:
                  error:
                    type: string
                    example: resource_not_found
                  error_description:
                    type: string
                    example: 'Account could not be found.'
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Modules
    put:
      summary: 'Update an account.'
      operationId: updateAnAccount
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  name: 'Savings Account Updated'
                  type: savings
                  balance: 2500.0
                  open_date: '2025-07-16'
                  close_date: null
                  status: active
                  created_at: '2025-07-10T10:00:00Z'
                  updated_at: '2025-07-10T10:00:00Z'
                  user_id: 1
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: 'Savings Account Updated'
                  type:
                    type: string
                    example: savings
                  balance:
                    type: number
                    example: 2500.0
                  open_date:
                    type: string
                    example: '2025-07-16'
                  close_date:
                    type: string
                    example: null
                  status:
                    type: string
                    example: active
                  created_at:
                    type: string
                    example: '2025-07-10T10:00:00Z'
                  updated_at:
                    type: string
                    example: '2025-07-10T10:00:00Z'
                  user_id:
                    type: integer
                    example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: resource_not_found
                  error_description: 'Account could not be found.'
                  message: 'Resource not found'
                properties:
                  error:
                    type: string
                    example: resource_not_found
                  error_description:
                    type: string
                    example: 'Account could not be found.'
                  message:
                    type: string
                    example: 'Resource not found'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name field is required. (and 1 more error)'
                  errors:
                    name:
                      - 'The name field is required.'
                    status:
                      - 'The selected status is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The name field is required. (and 1 more error)'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name field is required.'
                        items:
                          type: string
                      status:
                        type: array
                        example:
                          - 'The selected status is invalid.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: resource_not_updated
                  error_description: 'Account has not been updated'
                  message: 'Resource not updated'
                properties:
                  error:
                    type: string
                    example: resource_not_updated
                  error_description:
                    type: string
                    example: 'Account has not been updated'
                  message:
                    type: string
                    example: 'Resource not updated'
      tags:
        - Modules
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The account name.'
                  example: '"Savings Account"'
                  nullable: false
                type:
                  type: string
                  description: 'The account type.'
                  example: '"savings"'
                  nullable: false
                balance:
                  type: number
                  description: 'The balance.'
                  example: 1500.0
                  nullable: false
                open_date:
                  type: string
                  description: 'The opening date.'
                  example: '"2025-07-01"'
                  nullable: false
                close_date:
                  type: string
                  description: 'The closing date.'
                  example: '"2025-12-31"'
                  nullable: true
                status:
                  type: string
                  description: 'The status.'
                  example: '"inactive"'
                  nullable: false
    delete:
      summary: 'Destroy an account'
      operationId: destroyAnAccount
      description: ''
      parameters: []
      responses:
        204:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: resource_not_found
                  error_description: 'Account could not be found.'
                  message: 'Resource not found'
                properties:
                  error:
                    type: string
                    example: resource_not_found
                  error_description:
                    type: string
                    example: 'Account could not be found.'
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: resource_not_deleted
                  error_description: 'Account has not been deleted'
                  message: 'Resource not deleted'
                properties:
                  error:
                    type: string
                    example: resource_not_deleted
                  error_description:
                    type: string
                    example: 'Account has not been deleted'
                  message:
                    type: string
                    example: 'Resource not deleted'
      tags:
        - Modules
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the account.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/accounts/{account_id}/transactions':
    get:
      summary: 'Find and paginates all transactions for logged user and for selected account.'
      operationId: findAndPaginatesAllTransactionsForLoggedUserAndForSelectedAccount
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: exception
                  error_description: 'Unauthorized: unable to set cookie'
                  message: 'Authentication failed exception.'
                properties:
                  error:
                    type: string
                    example: exception
                  error_description:
                    type: string
                    example: 'Unauthorized: unable to set cookie'
                  message:
                    type: string
                    example: 'Authentication failed exception.'
      tags:
        - Modules
    post:
      summary: 'Store a transaction for an account.'
      operationId: storeATransactionForAnAccount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Modules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                amount:
                  type: string
                  description: 'Must match the regex /^\d+(\.\d{1,2})?$/.'
                  example: '64'
                  nullable: false
                transaction_date:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                category_id:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
              required:
                - type
                - amount
                - transaction_date
                - category_id
    parameters:
      -
        in: path
        name: account_id
        description: 'The ID of the account.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/transactions/{id}':
    get:
      summary: 'Find a transaction.'
      operationId: findATransaction
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: exception
                  error_description: 'Unauthorized: unable to set cookie'
                  message: 'Authentication failed exception.'
                properties:
                  error:
                    type: string
                    example: exception
                  error_description:
                    type: string
                    example: 'Unauthorized: unable to set cookie'
                  message:
                    type: string
                    example: 'Authentication failed exception.'
      tags:
        - Modules
    put:
      summary: 'Update a transaction.'
      operationId: updateATransaction
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Modules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                amount:
                  type: string
                  description: 'Must match the regex /^\d+(\.\d{1,2})?$/.'
                  example: '64'
                  nullable: false
                transaction_date:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                category_id:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
              required:
                - type
                - amount
                - transaction_date
                - category_id
    delete:
      summary: 'Destroy a transaction.'
      operationId: destroyATransaction
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Modules
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v1/transfers:
    post:
      summary: 'Transfer funds from one account to another'
      operationId: transferFundsFromOneAccountToAnother
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Modules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from_account_id:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                to_account_id:
                  type: integer
                  description: 'The value and <code>from_account_id</code> must be different.'
                  example: 16
                  nullable: false
                amount:
                  type: string
                  description: 'Must match the regex /^\d+(\.\d{1,2})?$/.'
                  example: '64'
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Fugiat sunt nihil accusantium harum mollitia.'
                  nullable: true
              required:
                - from_account_id
                - to_account_id
                - amount
  /api/v1/login:
    post:
      summary: 'Handle an authentication attempt.'
      operationId: handleAnAuthenticationAttempt
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token_type: Bearer
                  expires_in: 1296000
                  access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyIiwianRpIjoiYmRmM2FmNWJkYWM4OWRlZGI0YmFiNjA2ODVkYjc5OTliOWJkNjlkZmJlM2ZjN2FiODViM2M3NDg0NDE0YjQxZjUwOGJlODE0ZGNjN2ZmMmUiLCJpYXQiOjE3NTI0Mjg0MTQuNjA4Njg3LCJuYmYiOjE3NTI0Mjg0MTQuNjA4Njg4LCJleHAiOjE3NTM3MjQ0MTQuNTk3OTI3LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.RYk6LHr3PWt1XQcI0WTWvVE041DlOcc4vS-q9PStZ51fNFd8FRtkxYL3aGViqoImSClHteNvPcIP8REVwXVdUx1ZEJ-EdiA8--SqpdZzj3c5uMYwl8v3lMrEoa670--0N8s9TjXS1a5E7wAlIDOqHFVk0zguKz9MzcuiIKYsefkZulYVLxTftZyWDAfEt4f4I8qHeXQW0Q9jiJ_rlRbeHfS0gSjKT1NX6ODrfEWlZSmkzcFG7IkADeeeZaDdbIuxI3lge1w69cuNddOHX2qYA3C1ADkew5VYZdl0etaZTTPNXourdlfr7PP9HU_qbZcu2D5pOnsCxmMyElFs3npRlhS-CeoYnjpoRgf_g15G2LuIQONBVHebsuFqz3Ta1_zW_3NVxL8YBFcND7mrSDY87sB4g15nZC9QELfxn-irOb5FUenjvtL4D0chnAdxEWAv2I-jnTtXotMvFd1KT35ceKKbDozyDmYVp5HjqrIbOOs2aeoaEhzudj3w2DxTlH5OqX8-I6-JazwnMta5zgNS5Kd5a6HHCrc04K4n5IlgWoEuImf_HIphgqjHsAWeaBJe4tJ22VitnZxdRXvzYqYUeIcaDnhAdegH8CxKCkFz1QDy8yh75I10WbQMeZCDbhrG6sbfvGKqShjL0GWimsoC-8xENpg5xH9F9GbB4PGeNeE
                  refresh_token: def502004d10b094a44bf92d5be4320bda4feceee26aba55a9713698982e775cc7efedee12c576368d5bcd9952938cb765ab65ddfdb79770086371b2bc7fbee6ec5146c8e93074b2bbf5f17948089ed50a7ec7dd9eaae30600fa16dcd10419400eb57b8c6a12ac818596efd61a10f7e2a38e7af0fbd9df578d330eb8c49934ac124dcecfe6535556c573f699686510f8e69b419a3a9080af53dca4ebe13188c877ac8dfa3d62eaeccdd2e8fdc6289e7f018f9ec6c594943072a43f8fad50b2c4e145c962f3be7db5daca6ea1d114e30da11ca8c58388f65850ff12276c1d80b083483d4402cd3d7151d3a96ad0124987ab346cb3b4dd2db9c52686070ea255dfb568fbd9af193c15210195cc0257519b1366f7e4c2d2d40a639a877443a36de6a08b8a25a04cbab1a7d5dedd345575b1f58a3790a8a009855414ddffc706fbe9414acd3d43c61dcaa98109c3436e85488768182803bb677a7940d4f2b03e83a82e
                properties:
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: integer
                    example: 1296000
                  access_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyIiwianRpIjoiYmRmM2FmNWJkYWM4OWRlZGI0YmFiNjA2ODVkYjc5OTliOWJkNjlkZmJlM2ZjN2FiODViM2M3NDg0NDE0YjQxZjUwOGJlODE0ZGNjN2ZmMmUiLCJpYXQiOjE3NTI0Mjg0MTQuNjA4Njg3LCJuYmYiOjE3NTI0Mjg0MTQuNjA4Njg4LCJleHAiOjE3NTM3MjQ0MTQuNTk3OTI3LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.RYk6LHr3PWt1XQcI0WTWvVE041DlOcc4vS-q9PStZ51fNFd8FRtkxYL3aGViqoImSClHteNvPcIP8REVwXVdUx1ZEJ-EdiA8--SqpdZzj3c5uMYwl8v3lMrEoa670--0N8s9TjXS1a5E7wAlIDOqHFVk0zguKz9MzcuiIKYsefkZulYVLxTftZyWDAfEt4f4I8qHeXQW0Q9jiJ_rlRbeHfS0gSjKT1NX6ODrfEWlZSmkzcFG7IkADeeeZaDdbIuxI3lge1w69cuNddOHX2qYA3C1ADkew5VYZdl0etaZTTPNXourdlfr7PP9HU_qbZcu2D5pOnsCxmMyElFs3npRlhS-CeoYnjpoRgf_g15G2LuIQONBVHebsuFqz3Ta1_zW_3NVxL8YBFcND7mrSDY87sB4g15nZC9QELfxn-irOb5FUenjvtL4D0chnAdxEWAv2I-jnTtXotMvFd1KT35ceKKbDozyDmYVp5HjqrIbOOs2aeoaEhzudj3w2DxTlH5OqX8-I6-JazwnMta5zgNS5Kd5a6HHCrc04K4n5IlgWoEuImf_HIphgqjHsAWeaBJe4tJ22VitnZxdRXvzYqYUeIcaDnhAdegH8CxKCkFz1QDy8yh75I10WbQMeZCDbhrG6sbfvGKqShjL0GWimsoC-8xENpg5xH9F9GbB4PGeNeE
                  refresh_token:
                    type: string
                    example: def502004d10b094a44bf92d5be4320bda4feceee26aba55a9713698982e775cc7efedee12c576368d5bcd9952938cb765ab65ddfdb79770086371b2bc7fbee6ec5146c8e93074b2bbf5f17948089ed50a7ec7dd9eaae30600fa16dcd10419400eb57b8c6a12ac818596efd61a10f7e2a38e7af0fbd9df578d330eb8c49934ac124dcecfe6535556c573f699686510f8e69b419a3a9080af53dca4ebe13188c877ac8dfa3d62eaeccdd2e8fdc6289e7f018f9ec6c594943072a43f8fad50b2c4e145c962f3be7db5daca6ea1d114e30da11ca8c58388f65850ff12276c1d80b083483d4402cd3d7151d3a96ad0124987ab346cb3b4dd2db9c52686070ea255dfb568fbd9af193c15210195cc0257519b1366f7e4c2d2d40a639a877443a36de6a08b8a25a04cbab1a7d5dedd345575b1f58a3790a8a009855414ddffc706fbe9414acd3d43c61dcaa98109c3436e85488768182803bb677a7940d4f2b03e83a82e
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: exception
                  error_description: 'The user credentials were incorrect.'
                  message: 'Authentication failed exception.'
                properties:
                  error:
                    type: string
                    example: exception
                  error_description:
                    type: string
                    example: 'The user credentials were incorrect.'
                  message:
                    type: string
                    example: 'Authentication failed exception.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Token invalid or revoked'
                properties:
                  message:
                    type: string
                    example: 'Token invalid or revoked'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The email field is required. (and 1 more error).'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  message:
                    type: string
                    example: 'The email field is required. (and 1 more error).'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
        500:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Modules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The user’s email.'
                  example: user@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The user’s password.'
                  example: secret
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/v1/logout:
    post:
      summary: 'Logout user (revoke the token)'
      operationId: logoutUserrevokeTheToken
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully logged out'
                properties:
                  message:
                    type: string
                    example: 'Successfully logged out'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message_access_token: 'Unable to revoke access token.'
                  message_refresh_token: 'Unable to revoke refresh token.'
                properties:
                  message_access_token:
                    type: string
                    example: 'Unable to revoke access token.'
                  message_refresh_token:
                    type: string
                    example: 'Unable to revoke refresh token.'
      tags:
        - Modules
  /api/v1/user:
    get:
      summary: 'Get the authenticated user'
      operationId: getTheAuthenticatedUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  first_name: John
                  last_name: Doe
                  email: jane.doe@example.com
                properties:
                  id:
                    type: integer
                    example: 1
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
                  email:
                    type: string
                    example: jane.doe@example.com
      tags:
        - Modules
  /api/v1/register:
    post:
      summary: 'Register a new user'
      operationId: registerANewUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  first_name: John
                  last_name: Doe
                  email: jane.doe@example.com
                properties:
                  id:
                    type: integer
                    example: 1
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
                  email:
                    type: string
                    example: jane.doe@example.com
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation failed'
                  errors:
                    first_name:
                      - 'The first name field is required.'
                      - 'First name must be a string'
                    last_name:
                      - 'The last name field is required.'
                      - 'Last name must be a string'
                    email:
                      - 'The email field is required.'
                      - 'The email must be a valid email address.'
                      - 'The email has already been taken'
                    password:
                      - 'The password field is required.'
                      - 'The password must be at least 8 characters.'
                properties:
                  message:
                    type: string
                    example: 'Validation failed'
                  errors:
                    type: object
                    properties:
                      first_name:
                        type: array
                        example:
                          - 'The first name field is required.'
                          - 'First name must be a string'
                        items:
                          type: string
                      last_name:
                        type: array
                        example:
                          - 'The last name field is required.'
                          - 'Last name must be a string'
                        items:
                          type: string
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                          - 'The email must be a valid email address.'
                          - 'The email has already been taken'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                          - 'The password must be at least 8 characters.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: resource_not_created
                  error_description: 'User has not been created'
                  message: 'Resource not created'
                properties:
                  error:
                    type: string
                    example: resource_not_created
                  error_description:
                    type: string
                    example: 'User has not been created'
                  message:
                    type: string
                    example: 'Resource not created'
      tags:
        - Modules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'The user’s first name.'
                  example: John
                  nullable: false
                last_name:
                  type: string
                  description: 'The user’s last name.'
                  example: Doe
                  nullable: false
                email:
                  type: string
                  description: 'The user’s email address.'
                  example: jane.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The user’s password (min 8 chars).'
                  example: secret1234
                  nullable: false
              required:
                - first_name
                - last_name
                - email
                - password
      security: []
