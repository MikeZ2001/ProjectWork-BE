name: Modules
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/accounts
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Find all paginated accounts.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
            "data": [
              {
                "id": 1,
                "name": "Checking Account",
                "type": "checking",
                "balance": 1000.00,
                "open_date": "2025-07-01",
                "close_date": null,
                "status": "active",
                "created_at": "2025-07-01T09:00:00Z",
                "updated_at": "2025-07-01T09:00:00Z"
              }
            ],
            "links": {
              "first": "http://api.example.com/accounts?page=1",
              "last":  "http://api.example.com/accounts?page=1",
              "prev":  null,
              "next":  null
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 1,
              "path": "http://api.example.com/accounts",
              "per_page": 10,
              "to": 1,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/accounts
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Store an account.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The account name.'
        required: false
        example: '"Savings Account"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The account type.'
        required: false
        example: '"savings"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      balance:
        name: balance
        description: 'The balance.'
        required: false
        example: 1500.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      open_date:
        name: open_date
        description: 'The opening date.'
        required: false
        example: '"2025-07-01"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      close_date:
        name: close_date
        description: 'The closing date.'
        required: false
        example: '"2025-12-31"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status.'
        required: false
        example: '"inactive"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Savings Account"'
      type: '"savings"'
      balance: 1500.0
      open_date: '"2025-07-01"'
      close_date: '"2025-12-31"'
      status: '"inactive"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "id": 2,
              "name": "Savings Account",
              "type": "savings",
              "balance": 1500.00,
              "open_date": "2025-07-10",
              "close_date": null,
              "status": "active",
              "created_at": "2025-07-10T10:00:00Z",
              "updated_at": "2025-07-10T10:00:00Z",
              "user_id": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The name field is required. (and 1 more error)",
            "errors": {
              "name": [
                "The name field is required."
              ],
              "type": [
                "The selected type is invalid."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "resource_not_created",
            "error_description": "Account has not been created",
            "message": "Resource not created"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/accounts/{id}'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Find an account.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the account.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "id": 1,
              "name": "Checking Account",
              "type": "checking",
              "balance": 1000.00,
              "open_date": "2025-07-01",
              "close_date": null,
              "status": "active",
              "created_at": "2025-07-01T09:00:00Z",
              "updated_at": "2025-07-01T09:00:00Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "resource_not_found",
            "error_description": "Account could not be found.",
            "message": "Resource not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/accounts/{id}'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Update an account.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the account.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The account name.'
        required: false
        example: '"Savings Account"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The account type.'
        required: false
        example: '"savings"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      balance:
        name: balance
        description: 'The balance.'
        required: false
        example: 1500.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      open_date:
        name: open_date
        description: 'The opening date.'
        required: false
        example: '"2025-07-01"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      close_date:
        name: close_date
        description: 'The closing date.'
        required: false
        example: '"2025-12-31"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status.'
        required: false
        example: '"inactive"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Savings Account"'
      type: '"savings"'
      balance: 1500.0
      open_date: '"2025-07-01"'
      close_date: '"2025-12-31"'
      status: '"inactive"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 2,
            "name": "Savings Account Updated",
            "type": "savings",
            "balance": 2500.00,
            "open_date": "2025-07-16",
            "close_date": null,
            "status": "active",
            "created_at": "2025-07-10T10:00:00Z",
            "updated_at": "2025-07-10T10:00:00Z",
            "user_id": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "resource_not_found",
            "error_description": "Account could not be found.",
            "message": "Resource not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The name field is required. (and 1 more error)",
            "errors": {
              "name": [
                "The name field is required."
              ],
              "status": [
                "The selected status is invalid."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "resource_not_updated",
            "error_description": "Account has not been updated",
            "message": "Resource not updated"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/accounts/{id}'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Destroy an account'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the account.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "resource_not_found",
            "error_description": "Account could not be found.",
            "message": "Resource not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "resource_not_deleted",
            "error_description": "Account has not been deleted",
            "message": "Resource not deleted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/accounts/{account_id}/transactions'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Transaction
      subgroupDescription: ''
      title: 'Find and paginates all transactions for logged user and for selected account.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account_id:
        name: account_id
        description: 'The ID of the account.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"error":"exception","error_description":"Unauthorized: unable to set cookie","message":"Authentication failed exception."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/accounts/{account_id}/transactions'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Transaction
      subgroupDescription: ''
      title: 'Store a transaction for an account.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account_id:
        name: account_id
        description: 'The ID of the account.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Must match the regex /^\d+(\.\d{1,2})?$/.'
        required: true
        example: '64'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction_date:
        name: transaction_date
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type: architecto
      amount: '64'
      transaction_date: architecto
      description: 'Eius et animi quos velit et.'
      category_id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/transactions/{id}'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Transaction
      subgroupDescription: ''
      title: 'Find a transaction.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"error":"exception","error_description":"Unauthorized: unable to set cookie","message":"Authentication failed exception."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/transactions/{id}'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Transaction
      subgroupDescription: ''
      title: 'Update a transaction.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Must match the regex /^\d+(\.\d{1,2})?$/.'
        required: true
        example: '64'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction_date:
        name: transaction_date
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type: architecto
      amount: '64'
      transaction_date: architecto
      description: 'Eius et animi quos velit et.'
      category_id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/transactions/{id}'
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Transaction
      subgroupDescription: ''
      title: 'Destroy a transaction.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/transfers
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: Transfer
      subgroupDescription: ''
      title: 'Transfer funds from one account to another'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      from_account_id:
        name: from_account_id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      to_account_id:
        name: to_account_id
        description: 'The value and <code>from_account_id</code> must be different.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Must match the regex /^\d+(\.\d{1,2})?$/.'
        required: true
        example: '64'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'Fugiat sunt nihil accusantium harum mollitia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      from_account_id: 16
      to_account_id: 16
      amount: '64'
      description: 'Fugiat sunt nihil accusantium harum mollitia.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: OAuth
      subgroupDescription: ''
      title: 'Handle an authentication attempt.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The user’s email.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The user’s password.'
        required: true
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
      password: secret
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "token_type": "Bearer",
            "expires_in": 1296000,
            "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyIiwianRpIjoiYmRmM2FmNWJkYWM4OWRlZGI0YmFiNjA2ODVkYjc5OTliOWJkNjlkZmJlM2ZjN2FiODViM2M3NDg0NDE0YjQxZjUwOGJlODE0ZGNjN2ZmMmUiLCJpYXQiOjE3NTI0Mjg0MTQuNjA4Njg3LCJuYmYiOjE3NTI0Mjg0MTQuNjA4Njg4LCJleHAiOjE3NTM3MjQ0MTQuNTk3OTI3LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.RYk6LHr3PWt1XQcI0WTWvVE041DlOcc4vS-q9PStZ51fNFd8FRtkxYL3aGViqoImSClHteNvPcIP8REVwXVdUx1ZEJ-EdiA8--SqpdZzj3c5uMYwl8v3lMrEoa670--0N8s9TjXS1a5E7wAlIDOqHFVk0zguKz9MzcuiIKYsefkZulYVLxTftZyWDAfEt4f4I8qHeXQW0Q9jiJ_rlRbeHfS0gSjKT1NX6ODrfEWlZSmkzcFG7IkADeeeZaDdbIuxI3lge1w69cuNddOHX2qYA3C1ADkew5VYZdl0etaZTTPNXourdlfr7PP9HU_qbZcu2D5pOnsCxmMyElFs3npRlhS-CeoYnjpoRgf_g15G2LuIQONBVHebsuFqz3Ta1_zW_3NVxL8YBFcND7mrSDY87sB4g15nZC9QELfxn-irOb5FUenjvtL4D0chnAdxEWAv2I-jnTtXotMvFd1KT35ceKKbDozyDmYVp5HjqrIbOOs2aeoaEhzudj3w2DxTlH5OqX8-I6-JazwnMta5zgNS5Kd5a6HHCrc04K4n5IlgWoEuImf_HIphgqjHsAWeaBJe4tJ22VitnZxdRXvzYqYUeIcaDnhAdegH8CxKCkFz1QDy8yh75I10WbQMeZCDbhrG6sbfvGKqShjL0GWimsoC-8xENpg5xH9F9GbB4PGeNeE",
            "refresh_token": "def502004d10b094a44bf92d5be4320bda4feceee26aba55a9713698982e775cc7efedee12c576368d5bcd9952938cb765ab65ddfdb79770086371b2bc7fbee6ec5146c8e93074b2bbf5f17948089ed50a7ec7dd9eaae30600fa16dcd10419400eb57b8c6a12ac818596efd61a10f7e2a38e7af0fbd9df578d330eb8c49934ac124dcecfe6535556c573f699686510f8e69b419a3a9080af53dca4ebe13188c877ac8dfa3d62eaeccdd2e8fdc6289e7f018f9ec6c594943072a43f8fad50b2c4e145c962f3be7db5daca6ea1d114e30da11ca8c58388f65850ff12276c1d80b083483d4402cd3d7151d3a96ad0124987ab346cb3b4dd2db9c52686070ea255dfb568fbd9af193c15210195cc0257519b1366f7e4c2d2d40a639a877443a36de6a08b8a25a04cbab1a7d5dedd345575b1f58a3790a8a009855414ddffc706fbe9414acd3d43c61dcaa98109c3436e85488768182803bb677a7940d4f2b03e83a82e"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "exception",
            "error_description": "The user credentials were incorrect.",
            "message": "Authentication failed exception."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |
          {
            "message": "Token invalid or revoked"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The email field is required. (and 1 more error).",
            "errors": {
              "email": ["The email field is required."],
              "password": ["The password field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: ''
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: OAuth
      subgroupDescription: ''
      title: 'Logout user (revoke the token)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message_access_token": "Unable to revoke access token.",
            "message_refresh_token": "Unable to revoke refresh token."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: OAuth
      subgroupDescription: ''
      title: 'Get the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "first_name": "John",
            "last_name": "Doe",
            "email": "jane.doe@example.com"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Modules
      groupDescription: ''
      subgroup: User
      subgroupDescription: ''
      title: 'Register a new user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The user’s first name.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'The user’s last name.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The user’s email address.'
        required: true
        example: jane.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The user’s password (min 8 chars).'
        required: true
        example: secret1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      first_name: John
      last_name: Doe
      email: jane.doe@example.com
      password: secret1234
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "first_name": "John",
            "last_name": "Doe",
            "email": "jane.doe@example.com"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |+
          {
            "message": "Validation failed",
            "errors": {
              "first_name": ["The first name field is required.", "First name must be a string"],
              "last_name":  ["The last name field is required.", "Last name must be a string"],
              "email":      ["The email field is required.", "The email must be a valid email address.", "The email has already been taken"],
              "password":   ["The password field is required.", "The password must be at least 8 characters."]
            }
          }

        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "resource_not_created",
            "error_description": "User has not been created",
            "message": "Resource not created"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
